<?php

/**
 * API schema for research project
 * API schema for research project
 * PHP version 8.2
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class StudentController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation studentGet
     *
     * Find first n students.
     *
     *
     * @return Http response
     */
    public function studentGet()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if ($input['results'] < 1) {
            throw new \InvalidArgumentException('invalid value for $results when calling StudentController.studentGet, must be bigger than or equal to 1.');
        }
        $results = $input['results'];


        return response('How about implementing studentGet as a get method ?');
    }
    /**
     * Operation studentPost
     *
     * Add a new students.
     *
     *
     * @return Http response
     */
    public function studentPost()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['student'])) {
            throw new \InvalidArgumentException('Missing the required parameter $student when calling studentPost');
        }
        $student = $input['student'];


        return response('How about implementing studentPost as a post method ?');
    }
    /**
     * Operation studentStudentIdDelete
     *
     * Delete student by ID.
     *
     * @param int $studentId ID of the student to delete (required)
     *
     * @return Http response
     */
    public function studentStudentIdDelete($studentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing studentStudentIdDelete as a delete method ?');
    }
    /**
     * Operation studentStudentIdPatch
     *
     * Update some fields of student.
     *
     * @param int $studentId ID of the student to update (required)
     *
     * @return Http response
     */
    public function studentStudentIdPatch($studentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing studentStudentIdPatch as a patch method ?');
    }
    /**
     * Operation studentStudentIdPut
     *
     * Update student.
     *
     * @param int $studentId ID of the student to update (required)
     *
     * @return Http response
     */
    public function studentStudentIdPut($studentId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing studentStudentIdPut as a put method ?');
    }
}
